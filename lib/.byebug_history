exit
array
exit
array
exit
array
input.nil?
input
exit
allmoviesarray[40000].attributes['href'].value
allmoviesarray[40000].text
allmoviesarray[20000].text
allmoviesarray[0].text
allmoviesarray.value
allmoviesarray.text
allmoviesarray.count
allmoviesarray.text
allmoviesarray
exit
index.text
index.count
exit
puts @parsed.css('table.wikitable').css('tr').css('td').css('a').text
@parsed.css('table.wikitable').css('tr').css('td').css('a').text
@parsed.css('table.wikitable').css('tr').css('td').css('a').count
exit
@parsed.css('table.wikitable').css('tr').css('td').css('a')[0].attributes['href'].value
puts @parsed.css('table.wikitable').css('tr').css('td').css('a').attributes['href'].value
@parsed.css('table.wikitable').css('tr').css('td').css('a').attributes['href'].value
@parsed.css('table.wikitable').css('tr').css('td').css('a').text
@parsed.css('table.wikitable').css('tr').css('td').css('a')
exit
puts movieinfo[3]
puts movieinfo[1]
puts movieinfo[2]
movieinfo[2]
movieinfo[1]
exit
movieinfo[1]
movieinfo[0]
movieinfo
exit
result[1]
result[0]
puts result[0]
exit
puts result[0]
p result[0]
p resutl[0]
exit
puts result[1]
puts result[0]
result[0]
exit
array.each{|item| puts item.text}
array.each{|item| puts item}
array.text.each{|item| puts item}
array.each{|item| puts item.text}
p array.text
puts array.text
array.count
array.text.count
array.text
exit
puts parsed.css('div.div-col').css('a')[1].attributes['href'].value
puts parsed.css('div.div-col').css('a')[1].text
puts parsed.css('div.div-col').css('a')[1].
puts parsed.css('div.div-col').css('a').text
puts parsed.css('div.div-col').css('li').css('i').text
puts parsed.css('div.div-col').css('li')[1660].text
puts parsed.css('div.div-col').css('li')[1661].text
puts parsed.css('div.div-col').css('li')[1660].text
puts parsed.css('div.div-col').css('li')[1661].text
puts parsed.css('div.div-col').css('li')[1662].text
puts parsed.css('div.div-col').css('li')[1663].text
puts parsed.css('div.div-col').css('li')[1664].text
puts parsed.css('div.div-col').css('li')[1666].text
puts parsed.css('div.div-col').css('li')[1680].text
puts parsed.css('div.div-col').css('li')[1694].text
puts parsed.css('div.div-col').css('li').count
puts parsed.css('div.div-col').css('li').text
parsed.css('div.div-col').css('li').text
parsed.css('div.div-col').css('li')
parsed.css('div.div-col')
array.css('li')
puts array.text
array.text
array
exit
puts array.text
puts array
puts @parsed.css('div.div-col').css('a').text
@parsed.css('div.div-col').css('a').text
@parsed.css('div.div-col').css('a')
parsed.css('div.div-col').css('a')
exit
puts parsed.css('div.mw-parser-output').css('p')[2].text
puts parsed.css('div.mw-parser-output').css('p')[0].text
puts parsed.css('div.mw-parser-output').css('p').text
parsed.css('div.mw-parser-output').css('p').text
parsed.css('div.mw-parser-output').text.split("\n")[67]
parsed.css('div.mw-parser-output').text.split("\n")[]67
parsed.css('div.mw-parser-output').text.split("\n").index("Plot[edit]")
parsed.css('div.mw-parser-output').text.index("Plot[edit]")
parsed.css('div.mw-parser-output').index("Plot[edit]")
parsed.css('div.mw-parser-output')[2205].text
parsed.css('div.mw-parser-output').text.index("Plot[edit]")
parsed.css('div.mw-parser-output').text
parsed.css('div.mw-parser-output').index(Plot[edit])
parsed.css('div.mw-parser-output').css('h2').text.index(Plot[edit])
parsed.css('div.mw-parser-output').css('h2').text
parsed.css('div.mw-parser-output').css('h2')
parsed.css('div.mw-parser-output').css('h2').index('Plot[edit]')
parsed.css('div.mw-parser-output').css('h2')[1].index
parsed.css('div.mw-parser-output').css('h2')[1].text == 'Plot[edit]'
parsed.css('div.mw-parser-output').css('h2')[1].text
parsed.css('div.mw-parser-output').css('h2')[2].text
parsed.css('div.mw-parser-output').css('h2')[2].text == 'Plot'
parsed.css('div.mw-parser-output').css('h2')[1].text == 'Plot'
parsed.css('div.mw-parser-output').css('h2')[0].text == 'Plot'
parsed.css('div.mw-parser-output').css('h2').text == 'Plot'
init = parsed.css('div.mw-parser-output').css('h2').index if parsed.css('div.mw-parser-output').css('h2').text == 'Plot'
parsed.css('div.mw-parser-output').css('h2').text
parsed.css('div.mw-parser-output').css('p').text
parsed.css('div.mw-parser-output').css('p')
parsed.css('div.mw-parser-output')
parsed.css('mw-parser-output')
parsed.css('mw-parser-output').text
exit
movieinfo[1][2]
movieinfo[1][1]
exit
movieinfo[1][1].split("\n")
movieinfo[1][1].split('\n')
movieinfo[1][1].split
movieinfo[1][1].to_a
movieinfo[1][1]
puts movieinfo[1][1]
puts movieinfo[1][3]
puts movieinfo[1][2]
puts movieinfo[1][1]
movieinfo[1][1]
puts movieinfo[1][0]
puts movieinfo[1]
movieinfo[1]
exit
puts parsed.css('table.infobox').css('tr').css('td')[2].text
parsed.css('table.infobox').css('tr').css('td')[2].text
parsed.css('table.infobox').css('tr').css('td')[2].text.class
parsed.css('table.infobox').css('tr').css('td')[1].text.class
parsed.css('table.infobox').css('tr').css('td')[1].text.is_a?
parsed.css('table.infobox').css('tr').css('td')[1].text.count
parsed.css('table.infobox').css('tr').css('td')[1].text
parsed.css('table.infobox').css('tr').css('td')[1]
parsed.css('table.infobox').css('tr').css('td')[1].
parsed.css('table.infobox').css('tr').css('td')[1].count
parsed.css('table.infobox').css('tr').css('td')[2].text.count
parsed.css('table.infobox').css('tr').css('td')[2].count
puts parsed.css('table.infobox').css('tr').css('td')[2].count
puts parsed.css('table.infobox').css('tr').css('td')[2].text
puts parsed.css('table.infobox').css('tr').css('td')[1].text
puts parsed.css('table.infobox').css('tr').css('td')[0].text
puts parsed.css('table.infobox').css('tr').css('td').text
parsed.css('table.infobox').css('tr').css('td').text
parsed.css('table.infobox').css('tr').css('td')
parseparsed.css('table.infobox').css('tr').css('td')
parseparsed.css('table.infobox').css('tr').css('
movieinfo[1][1]
movieinfo[1][1].split
movieinfo[1][1].count
movieinfo[1][1].length
puts movieinfo[1][1].length
puts movieinfo[1][1].count
puts movieinfo[1][1].split
puts movieinfo[1][1][0]
puts movieinfo[1][1]
movieinfo[1][1]
movieinfo[1][0]
movieinfo[1]
puts movieinfo[1]
movieinfo[1]
movieinfo[1].delete('')
p movieinfo[1]
puts movieinfo[1]
movieinfo[1]
exit
movieinfo[1]
movieinfo[1].delete(nil)
movieinfo[1].map{|item| item.delete if item.nil?}
movieinfo[1]
exit
puts movieinfo[1]
p movieinfo[1]
movieinfo[1]1
movieinfo[1]
exit
movieinfo[0]
exit
movieinfo[1]
movieinfo[0]
exit
movieinfo[1]
movieinfo[1].count
movieinfo[0].count
movieinfo[0]
exit.
parsed.css('table.haudio').css('tr').css('th').text.split
parsed.css('table.haudio').css('tr').css('th').text.to_a
parsed.css('table.haudio').css('tr').css('th').text
parsed.css('table.haudio').css('tr').css('th').split.text
parsed.css('table.haudio').css('tr').css('th').text.split
parsed.css('table.haudio').css('tr').css('th').text
movieinfo[0].count
movieinfo[0]
exit
movieinfo[0]
exit
parsed.css('table').cssclass
parsed.css('table').class
parsed.css('table').css
parsed.css(table).css
movieinfo.css
movieinfo[0].count
movieinfo[0]
exit
movieinfo[1].split
movieinfo[1]
movieinfo[0].count
movieinfo[0]
exit
movieinfo[0].length
movieinfo[0].count
movieinfo[0][35]
movieinfo[0][34]
movieinfo[0][33]
movieinfo[0][30]
movieinfo[0][29]
movieinfo[0][28]
movieinfo[0][27]
movieinfo[0][26]
movieinfo[0][25]
movieinfo[0][24]
movieinfo[0][23]
movieinfo[0][22]
movieinfo[0][21]
movieinfo[0][20]
movieinfo[0][19]
movieinfo[0][18]
movieinfo[0][17]
movieinfo[0][16]
movieinfo[0][15]
movieinfo[0][14]
movieinfo[0][13]
movieinfo[0][12]
movieinfo[0][11]
movieinfo[0][111]
